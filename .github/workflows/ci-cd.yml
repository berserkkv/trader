name: CI/CD Pipeline for Go Trading Server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.24'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: /tmp/go-cache
          key: ${{ runner.os }}-go-${{ hashFiles('**/*.go') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build Go project
        run: |
          go mod tidy
          go build -o trader ./cmd/main.go

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/trader:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Debian server
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          ssh -o StrictHostKeyChecking=no admin@3.123.41.68 << EOF
            set -e
            echo "Pulling image from Docker Hub..."
            docker pull ${DOCKER_USERNAME}/trader:latest

            echo "Stopping old container if it exists..."
            docker stop trader || true
            docker rm trader || true

            echo "Running new container..."
            docker run -d --restart=unless-stopped --name trader -p 8080:8080 ${DOCKER_USERNAME}/trader:latest
          EOF